/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.atividade08.view;

import br.com.ifba.atividade08.accountController.account;
import javax.swing.JOptionPane;
import br.com.ifba.atividade08.controller.BankController;

/**
 *
 * @author gerviz
 */
public class MainFrame extends javax.swing.JFrame {

  private int accountCounter = 0;
  criarConta dialog = new criarConta(new javax.swing.JFrame(), true, this);

  /**
   * Creates new form MainFrame
   */
  public MainFrame() {
    initComponents();

  }
  // atualiza a tela
  public void atualizarTela(){
    Object selected = bxOwner.getSelectedItem();
    if (selected != null) {
    String owner = bxOwner.getSelectedItem().toString();
    for (account conta : BankController.contas) {
      if (conta.getDono().equals(owner)) {
        lblAccountType.setText("tipo de conta:" + conta.getTipo());
        lblSaldo.setText("Saldo: " + conta.getSaldo());
        lblAccountNum.setText("Numero da conta: " + conta.getNumConta());
        if (conta.getTipo().equals("Corrente")) {
          lblMensalidade.setText("Mensalidade: 12.00");
        } else {
          lblMensalidade.setText("Mensalidade: 20.00");
        }
        break;
      }
    }
    }else{
    System.out.println("Nada selecionado no combo.");
    }
  }
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    bxOwner = new javax.swing.JComboBox<>();
    btnDraw = new javax.swing.JToggleButton();
    btnDeposit = new javax.swing.JToggleButton();
    btnCloseAccount = new javax.swing.JToggleButton();
    lblSaldo = new javax.swing.JLabel();
    lblMensalidade = new javax.swing.JLabel();
    lblAccountType = new javax.swing.JLabel();
    btnOpenAccount = new javax.swing.JToggleButton();
    lblAccountNum = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Gerviz's Bank");
    setBackground(new java.awt.Color(50, 50, 55));
    setPreferredSize(new java.awt.Dimension(353, 235));
    setResizable(false);
    setSize(new java.awt.Dimension(512, 512));
    addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        formMouseDragged(evt);
      }
    });
    getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    bxOwner.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bxOwnerActionPerformed(evt);
      }
    });
    getContentPane().add(bxOwner, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, 90, -1));

    btnDraw.setText("Sacar");
    btnDraw.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnDrawActionPerformed(evt);
      }
    });
    getContentPane().add(btnDraw, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 55, -1, -1));

    btnDeposit.setText("Depositar");
    btnDeposit.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnDepositActionPerformed(evt);
      }
    });
    getContentPane().add(btnDeposit, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 92, -1, -1));

    btnCloseAccount.setText("Fechar conta");
    btnCloseAccount.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnCloseAccountActionPerformed(evt);
      }
    });
    getContentPane().add(btnCloseAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 197, -1, -1));

    lblSaldo.setText("saldo:");
    getContentPane().add(lblSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

    lblMensalidade.setText("mensalidade: ");
    getContentPane().add(lblMensalidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, -1, -1));

    lblAccountType.setText("tipo de conta:");
    getContentPane().add(lblAccountType, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

    btnOpenAccount.setText("Abrir nova conta");
    btnOpenAccount.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnOpenAccountActionPerformed(evt);
      }
    });
    getContentPane().add(btnOpenAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

    lblAccountNum.setText("Numero da conta:");
    getContentPane().add(lblAccountNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1, -1));

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositActionPerformed
    String owner = bxOwner.getSelectedItem().toString();
    for (account conta : BankController.contas) {
      if (conta.getDono().equals(owner)) {
        // Pede o valor do depósito
        String input = JOptionPane.showInputDialog(this, "Informe o valor para depósito:");
        if (input == null) {
          return; // Cancelado
        }
        try {
          double valor = Double.parseDouble(input);
          if (valor <= 0) {
            JOptionPane.showMessageDialog(this, "Valor inválido!");
            return;
          }

          conta.deposit(valor); // realiza deposito
          JOptionPane.showMessageDialog(this, "Depósito realizado com sucesso!");
        } catch (NumberFormatException e) {
          JOptionPane.showMessageDialog(this, "Entrada inválida!");
        }

        break;
      }
    }
    atualizarTela();
  }//GEN-LAST:event_btnDepositActionPerformed

  private void btnOpenAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenAccountActionPerformed

    accountCounter++;
    if (accountCounter <= 2) {
      dialog.setLocationRelativeTo(this); // Isso vai centralizar o diálogo em relação ao JFrame
      dialog.setVisible(true); // Abre o diálogo
    } else {
      JOptionPane.showMessageDialog(
          null,
          "Contas maximas permitidas atingidas",
          "Erro",
          JOptionPane.ERROR_MESSAGE
      );
    }
    
  }//GEN-LAST:event_btnOpenAccountActionPerformed

  private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
    // TODO add your handling code here:
  }//GEN-LAST:event_formMouseDragged

  private void bxOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bxOwnerActionPerformed
    atualizarTela();
  }//GEN-LAST:event_bxOwnerActionPerformed

  private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
    String owner = bxOwner.getSelectedItem().toString();
    for (account conta : BankController.contas) {
      if (conta.getDono().equals(owner)) {
        // Pede o valor do saque
        String input = JOptionPane.showInputDialog(this, "Informe o valor para saque:");
        if (input == null) {
          return; // Cancelado
        }
        try {
          double valor = Double.parseDouble(input);
          if (valor <= 0) {
            JOptionPane.showMessageDialog(this, "Valor inválido!");
            return;
          }

          if (conta.getSaldo() >= valor) {
            conta.draw(valor); //realiza saque
            JOptionPane.showMessageDialog(this, "Saque realizado com sucesso!");
          } else {
            JOptionPane.showMessageDialog(this, "Saldo insuficiente!");
          }
        } catch (NumberFormatException e) {
          JOptionPane.showMessageDialog(this, "Entrada inválida!");
        }

        break;
      }
    }
    atualizarTela();
  }//GEN-LAST:event_btnDrawActionPerformed

  private void btnCloseAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseAccountActionPerformed
    String owner = bxOwner.getSelectedItem().toString();
    for (account conta : BankController.contas) {
      if (conta.getDono().equals(owner)) {
        if (conta.getSaldo() == 0) {
          conta.closeAccount();// encerra a conta
          BankController.contas.remove(conta); // Se for ArrayList
          bxOwner.removeItem(owner); // Atualiza combo
          JOptionPane.showMessageDialog(this, "Conta fechada com sucesso!");
        } else {
          JOptionPane.showMessageDialog(this, "Não é possível fechar a "
              + "conta com saldo diferente de zero.");
        }
        break;
      }
    }
    atualizarTela();
  }//GEN-LAST:event_btnCloseAccountActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new MainFrame().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JToggleButton btnCloseAccount;
  private javax.swing.JToggleButton btnDeposit;
  private javax.swing.JToggleButton btnDraw;
  private javax.swing.JToggleButton btnOpenAccount;
  public javax.swing.JComboBox<String> bxOwner;
  private javax.swing.JLabel lblAccountNum;
  private javax.swing.JLabel lblAccountType;
  private javax.swing.JLabel lblMensalidade;
  private javax.swing.JLabel lblSaldo;
  // End of variables declaration//GEN-END:variables
}
